#!/bin/bash

source /var/lib/./onegate.sh

vpn_credentials="$VPN_CREDENTIALS"
#vpn_credentials="$(check "$VPN_CREDENTIALS" VPN_CREDENTIALS)"

echo $vpn_credentials >> /opt/4-openvpn.log

function d2i() {
    echo $(( 0x$( printf "%02x" ${1//./ } ) ))
}

function i2d() {
    h=$( printf "%08X" "$1" )
    echo $(( 0x${h:0:2} )).$(( 0x${h:2:2} )).$(( 0x${h:4:2} )).$(( 0x${h:6:2} ))
}

function ipmask() {
    i2d $(( $( d2i $1 ) & $( d2i $2 ) ))
}

start_openvpn()
{
    systemctl start openvpn@server
#    systemctl enable --now openvpn@server
}

stop_openvpn()
{
    systemctl stop openvpn@server
}

create_openvpn_client()
{
    client_config="/root/vpn_config_files/$1.ovpn"
    cp /etc/openvpn/server.conf $client_config
    echo "client" >> $client_config
    echo "auth-user-pass" >> $client_config
    echo "auth-nocache" >> $client_config
    echo "remote $2 1194 udp" >> $client_config
    echo "<ca>" >> $client_config
    cat /etc/openvpn/pki/ca.crt >> $client_config
    echo "</ca>" >> $client_config
    echo "Created OpenVPN account for user $1" >> /etc/motd
    info OpenVPN "Created OpenVPN account for user $1" 2>/dev/null
}

configure_openvpn()
{

    #Generate part of openvpn conf that is common with the client conf
    cat > /etc/openvpn/server.conf <<EOF
dev tun
cipher AES-256-CBC
persist-key
persist-tun
status openvpn-status.log
verb 3
explicit-exit-notify 1
EOF

    for credential in $(echo $vpn_credentials); do
        user=$(echo $credential | cut -d ':' -f 1)
        pass=$(echo $credential | cut -d ':' -f 2 | base64)
        echo "$user $pass" >> /etc/openvpn/vpn_users
        create_openvpn_client $user $1
    done

    #Add the rest of the configurations only meant for the server
    cat >> /etc/openvpn/server.conf <<EOF
ifconfig-pool-persist ipp.txt
keepalive 10 120
topology subnet
port 1194
proto udp
server 192.168.253.0 255.255.255.0
ca pki/ca.crt
cert pki/issued/HyperCX.crt
key pki/private/HyperCX.key
dh dh2048.pem
script-security 3
auth-user-pass-verify /etc/openvpn/check_user_credentials.sh via-env
username-as-common-name
duplicate-cn
verify-client-cert none
EOF

private_ip=`ip -o addr show | grep -v 'inet6' | grep -v 'scope host' | awk '{print $4}' | cut -d '/' -f 1 | grep -E  '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)' | head -1`

private_mask=`ip -o addr show | grep -v 'inet6' | grep -v 'scope host' | awk '{print $4}' | grep -E  '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)' | cut -d '/' -f 2 | head -1`

case $private_mask in
  16)
    private_mask=255.255.0.0
    ;;

  25)
    private_mask=255.255.255.128
    ;;

  26)
    private_mask=255.255.255.192
    ;;

  27)
    private_mask=255.255.255.224
    ;;

  28)
    private_mask=255.255.255.240
    ;;

  24 | *)
    private_mask=255.255.255.0
    ;;


esac

private_gateway=`ipmask $private_ip $private_mask`

echo "push \"route $private_gateway $private_mask\"" >> /etc/openvpn/server.conf

}

get_first_interface_ipv4() {
    env | grep -E "^ETH0+_IP=" | cut -d '=' -f 2
}

get_first_interface_floating_ipv4() {
    env | grep -E "^ETH0+_VROUTER_IP=" | cut -d '=' -f 2
}

echo "=========================OPENVPN========================" >> /etc/motd
mkdir -p /root/vpn_config_files
stop_openvpn

#Clear existing users
echo > /etc/openvpn/vpn_users
if [ -n "${ETH0_MAC}" ]; then
    if [ -n "${ETH0_VROUTER_IP}" ]; then
        ipv4="$(get_first_interface_floating_ipv4)"
        ipv4_private="$(echo $ipv4 | grep -E '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)')"
    else
        ipv4="$(get_first_interface_ipv4)"
        ipv4_private="$(echo $ipv4 | grep -E '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)')"
    fi
    if [ -z "${ipv4_private}" ]; then
        if [ -n "${VPN_CREDENTIALS}" ]; then
            echo "OpenVPN ENABLED." >> /etc/motd
	    status OpenVPN ENABLED 2>/dev/null
            configure_openvpn $ipv4
            start_openvpn
        else
            echo "OpenVPN DISABLED. ETH0 found using public IP but no users to be configured found." >> /etc/motd
	    status OpenVPN DISABLED 2>/dev/null
	    info OpenVPN "ETH0 found using public IP but no users to be configured found." 2>/dev/null
        fi
    else
        echo "OpenVPN DISABLED. ETH0 found using a private IP ." >> /etc/motd
	status OpenVPN DISABLED 2>/dev/null
	info OpenVPN "ETH0 found using a private IP ." 2>/dev/null
    fi
else
    echo "OpenVPN DISABLED. NO ETH0 MAC." >> /etc/motd
    status OpenVPN DISABLED 2>/dev/null
    info OpenVPN "NO ETH0 MAC." 2>/dev/null
fi

